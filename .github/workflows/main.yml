name: continuous-integration
on:
  push:
    branches: master
# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - master
# on:
#   push:
#     branches: master
# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      # - name: Debug
      #   uses: hmarr/debug-action@master
      - name: Create Static Assets For Website
        run: |
          source .env
          echo ' - pull in my docker images as helpers'
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${REPO_OWNER} --password-stdin
          docker pull ${PROXY_DOCKER_IMAGE}
          docker pull docker.pkg.github.com/grantmacken/alpine-scour/scour:0.0.2
          docker pull docker.pkg.github.com/grantmacken/alpine-zopfli/zopfli:0.0.1
          docker pull docker.pkg.github.com/grantmacken/alpine-cssnano/cssnano:0.0.3
          echo -n ' - create volume: '
          docker volume create --driver local --name static-assets
          echo " - build static assets for ${DOMAIN} website " 
          pushd site/${DOMAIN}
          make assets
          popd
      - name: Create Generic Nginx Configuration
        run: |
          source .env   
          echo -n ' - create volume: '
          docker volume create --driver local --name nginx-configuration
          pushd proxy 
          make conf
          popd
      - name: Create Repo Owners Lualibs
        run: |
          source .env   
          echo -n ' - create volume: '
          docker volume create --driver local --name repo-owners-lualibs
          pushd proxy 
          make libs
          popd
      # - name: Pull proxy and xqerl images
      #   run: |
      #     source .env
      #     docker pull ${XQERL_DOCKER_IMAGE}
      #     echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${REPO_OWNER} --password-stdin
      #     docker pull ${PROXY_DOCKER_IMAGE}
      - name: Setup gcloud to work with GCE project
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "270.0.0"
          service_account_email: ${{ secrets.CLIENT_EMAIL }}
          service_account_key: ${{ secrets.GCE_KEY }}
      - name: gcloud configure
        run: |
          source .env
          gcloud config set project ${GCE_PROJECT}
          gcloud config set compute/zone ${GCE_ZONE}
          # gcloud compute instances list
          gcloud compute config-ssh &>/dev/null
          gcloud info
      - name: Create letsencypt volume and add existing Certs
        run: |
          source .env
          pushd proxy
          pwd
          make certsToHost
          popd
          pwd
      - name: Bring Containers Up
        run: |
            make up
            docker ps
            docker-compose logs

      # - name: build the xqerl web app
      #   run: |
      #       source .env
      #       # move to domain
      #       pushd site/${DOMAIN}
      #       # compile xQuery libs
      #       # compile order is defined in the  site/[DOMAIN] Makefile 
      #       # NOTE! order in important as some libs depend on others
      #       make app
      #       popd

      - name: take containers down
        run: |
            make down


