# HTTPS server 
server {
  listen 443      ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name  ~^(www\.)?(?<domain>.+)$;
# path to static files 'html' is docker volume 
  root html;
  index index.html;
# specify charset
  charset utf-8;
# Lock Down
############
  include certs.conf;
  include tls.conf;
  include headers.conf;
  set_by_lua_block $xqName { return 
   os.getenv("XQERL_CONTAINER_NAME")  
  }
  set_by_lua_block $xqPort { return
   os.getenv("XQERL_PORT")
  }


# Locations
############

### landing home page  
location ~* ^/(index|index.html)?$ {
    set $proxy "";
    rewrite_by_lua_block {
        ngx.var.proxy = ngx.var.xQname .. ':' ..  ngx.var.xQport 
        local uri = '/'  .. ngx.var.host .. '/' .. 'landing'
        ngx.req.set_uri(uri)
        }
    proxy_pass http://$proxy;
    # content_by_lua_block {
    #    local uri = '/'  .. ngx.var.ssl_server_name .. ngx.var.uri .. 'landing'
    #    ngx.say(uri)
    #   }
    }

location ~* ^/info$ {
   content_by_lua_block {
        ngx.say(ngx.var.xQname .. ':' ..  ngx.var.xQport )
        ngx.say(ngx.var.ssl_server_name)
        ngx.say(ngx.var.uri)
        -- ngx.say(ngx.var.route .. 'archive')
        --ngx.say(ngx.var.host)
        }
    }

location ~ /micropub {
 set $proxy "";
    rewrite_by_lua_block {
        local args = {}
        local contentType = ngx.var.http_content_type
        ngx.req.read_body()
        local from, to, err = ngx.re.find(contentType ,"application/x-www-form-urlencoded")
        if from then
           args = ngx.req.get_post_args()
        end
        ngx.var.proxy = ngx.var.xQname .. ':' ..  ngx.var.xQport 
        local uri = '/'  .. ngx.var.host .. '/' .. 'micropub'
        ngx.req.set_uri(uri)
        ngx.req.set_uri_args(args)
        }
    # proxy_redirect off;
    proxy_method GET;                    # change method
    proxy_set_header Connection "";
    proxy_http_version  1.1;
    proxy_pass_request_body on;
    proxy_pass http://xq:8081;
    }

## POSTS ##
###########
#  dateStamped  *archive* consist of 6 base60 chars
#   char 1,2,3 is the base 60 for short year + ordinal days
#   char 4,5,6 is the base 60 for seconds from days start
    location ~* "^/[0-9A-HJ-NP-Z_a-km-z]{6}$" {
    rewrite_by_lua_block {
        local uri = '/'  .. ngx.var.host .. '/' .. 'archive' .. ngx.var.uri
        ngx.req.set_uri(uri)
        }
      proxy_pass http://xq:8081;
    }
## RESOURCES ##
###############

location ~* ^/\w+\.css$ {
    rewrite_by_lua_block {
        local uri = '/resources/styles' .. ngx.var.uri
        ngx.req.set_uri(uri)
        }
    more_set_headers    "Content-Type: text/css; charset=utf-8";
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security max-age=15768000;
    add_header Vary Accept-Encoding;
    expires max;
    gzip off;
    gzip_static  always;
    gunzip on;
    root html/$domain;
    }

location ~* ^/\w+\.js$ {
    rewrite_by_lua_block {
        local uri = '/resources/scripts' .. ngx.var.uri
        ngx.req.set_uri(uri)
        }
    root html/$domain;
    }

## Close Server Block ##
}
